generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid()) @db.Uuid
  email        String   @unique
  createdAt    DateTime @default(now())
  passwordHash String
  Player       Player?
}

model Player {
  id             String              @id @default(uuid()) @db.Uuid
  userId         String              @unique @db.Uuid
  name           String?
  currentChapter String              @default("intro")
  currentScene   String
  visitedScenes  Json                @default("[]")
  choicesMade    Json                @default("[]")
  inventory      Json                @default("[]")
  stats          Json                @default("{}")
  level          Int                 @default(1)
  xp             Int                 @default(0)
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  currentQuest   String              @default("intro")
  user           User                @relation(fields: [userId], references: [id])
  achievements   PlayerAchievement[]
}

model Achievement {
  id          String              @id @default(uuid()) @db.Uuid
  key         String              @unique
  title       String
  description String?
  createdAt   DateTime            @default(now())
  players     PlayerAchievement[]
}

model PlayerAchievement {
  id            String      @id @default(uuid()) @db.Uuid
  playerId      String      @db.Uuid
  achievementId String      @db.Uuid
  progress      Json?
  earnedAt      DateTime    @default(now())
  achievement   Achievement @relation(fields: [achievementId], references: [id])
  player        Player      @relation(fields: [playerId], references: [id])

  @@unique([playerId, achievementId])
}
